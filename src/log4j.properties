# ”ровень логировани€
log4j.rootLogger=INFO, LOGFILE

# јдаптер дл€ работы с выводом в консоль
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# јпендер дл€ работы с файлами
log4j.appender.LOGFILE=org.apache.log4j.RollingFileAppender
# ѕуть где будет создаватьс€ лог файл
log4j.appender.LOGFILE.File= src\\Log\\log_file.log
# ”казываем максимальный размер файла с логами
log4j.appender.LOGFILE.MaxFileSize=1MB
# ”казываем перезапись файла с логами при каждом пуске программы
log4j.appender.LOGFILE.Append=false
#  онфигурируем шаблон вывода логов в файл
log4j.appender.LOGFILE.layout=org.apache.log4j.PatternLayout
log4j.appender.LOGFILE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
# «начение :
# %d{yyyy-MM-dd HH:mm:ss} Ц выводит дату в формате 2014-01-14 23:55:57
# %-5p Ц выводит уровень лога (ERROR, DEBUG, INFO Е), цифра 5 означает что всегда использовать 5 символов остальное дополнитс€ пробелами, а минус (-), то что позиционирование по левой стороне.
# %c{1} Ц категори€, в скобках указываетс€ сколько уровней выдавать. “ак как у нас 1 уровень то писатьс€ будет только им€ класса.
# %L Ц номер строки в которой произошЄл вызов записи в лог.
# %m Ц сообщение, которое передали в лог.
# %n Ц переход на новую строку.